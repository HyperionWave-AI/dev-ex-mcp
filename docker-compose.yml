version: '3.8'

# Unified Coordinator Production Setup
# Architecture: UI → REST API → Storage Layer (NO MCP proxying)
#
# Services:
#   - hyperion-coordinator: Unified service (REST API + UI serving)
#   - mongodb: Database for tasks, files, chunks
#   - qdrant: Vector database (optional, can use cloud)
#   - embedding-service: Text embeddings for code search

services:
  # Unified Coordinator (replaces mcp-server + http-bridge)
  hyperion-coordinator:
    # TEMP: Build locally to test TEI timeout fix
    # image: us-central1-docker.pkg.dev/production-471918/hyperion-public/hyperion-coordinator:latest
    build:
      context: ./coordinator
      dockerfile: Dockerfile
    ports:
      - "${HTTP_PORT:-7095}:7095"  # REST API + UI serving
    environment:
      - HTTP_PORT=7095
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:admin123@mongodb:27017/coordinator_db?authSource=admin}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-coordinator_db}
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - EMBEDDING=${EMBEDDING:-local}
      - TEI_URL=${TEI_URL:-http://embedding-service:8080}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
      - VOYAGE_MODEL=${VOYAGE_MODEL:-voyage-3}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CODE_INDEX_FOLDERS=${CODE_INDEX_FOLDERS:-}
      - CODE_INDEX_AUTO_SCAN=${CODE_INDEX_AUTO_SCAN:-false}
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hyperion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:7095/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    # No external port - internal communication only
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE:-coordinator_db}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    restart: unless-stopped
    networks:
      - hyperion-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Qdrant Vector Database (Optional - only for local development)
  # For production, use managed Qdrant Cloud instead
  qdrant:
    image: qdrant/qdrant:latest
    profiles:
      - local-qdrant  # Only starts with --profile local-qdrant
    # No external ports - internal communication only
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - hyperion-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Hugging Face Text Embeddings Inference (TEI) - Nomic Embed Text model
  # Note: TEI runs on CPU-only mode. On ARM64 (Apple Silicon), uses platform emulation.
  embedding-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-latest
    platform: linux/amd64
    command: --model-id nomic-ai/nomic-embed-text-v1.5 --port 8080
    # No external port - internal communication only
    environment:
      - HF_HUB_CACHE=/data
    volumes:
      - embedding_cache:/data
    restart: unless-stopped
    networks:
      - hyperion-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  qdrant_data:
    driver: local
  embedding_cache:
    driver: local

networks:
  hyperion-network:
    driver: bridge
    name: hyperion-network
