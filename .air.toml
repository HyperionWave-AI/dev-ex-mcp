# Air Configuration for Native Binary Hot Reload
# Watches both Go files and React UI for changes
# Rebuilds bin/hyper with embedded UI

root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  # Pre-build hook: Disabled for dev mode (UI should use Vite dev server)
  # To enable UI embedding, use 'make native' to build production binary
  # pre_cmd = ["./scripts/rebuild-ui.sh"]

  # Build command: Compile from hyper/ directory where go.mod is located
  # Use -tags dev to disable UI embedding (UI served from Vite dev server)
  cmd = "cd hyper && go build -tags dev -o ../tmp/hyper ./cmd/coordinator"

  # Binary location and execution
  bin = "tmp/hyper"

  # Arguments passed to the binary
  args_bin = ["--mode=http"]

  # Rebuild delay (500ms for faster hot reload)
  delay = 500

  # Watch Go files in unified hyper/
  include_dir = ["hyper/cmd", "hyper/internal"]
  include_ext = ["go", "tpl", "tmpl", "html"]

  # Also watch UI source files (triggers pre_cmd)
  # Note: Air will run pre_cmd before build when ANY watched file changes
  # The rebuild-ui.sh script is smart - it checks timestamps and skips if UI unchanged

  # Exclude patterns
  exclude_dir = [
    "ui/node_modules",
    "ui/dist",
    "hyper/embed",
    "bin",
    "tmp",
    "testdata",
    "vendor"
  ]
  exclude_regex = ["_test\\.go$"]
  exclude_unchanged = false

  # Logging
  log = "tmp/build-errors.log"

  # Process control
  kill_delay = "2s"
  send_interrupt = true
  stop_on_error = false
  rerun = false
  rerun_delay = 500

  # Performance
  poll = false
  poll_interval = 0
  follow_symlink = false

[color]
  app = ""
  build = "yellow"
  main = "magenta"
  runner = "green"
  watcher = "cyan"

[log]
  main_only = false
  time = false

[misc]
  clean_on_exit = false

[screen]
  clear_on_rebuild = false
  keep_scroll = true
